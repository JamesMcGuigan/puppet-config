username = "root";

desc "Reboot :hostname"
task :reboot, :hostname do |t, args|
  hostname = args[:hostname];
  sh "ssh #{username}@#{hostname} 'echo; echo `hostname` is rebooting; reboot;'"
end

desc "Bootstrap Puppet onto :hostname"
task :bootstrap, :hostname do |t, args|
  hostname = args[:hostname];

  commands = <<-EOF
    ssh-keyscan -H github.com | tee -a /etc/ssh/ssh_known_hosts
    apt-get update  -y
    apt-get install -y puppet git rsync
  EOF
  sh "ssh #{username}@#{hostname} '#{commands}'"
end

desc "Run Puppet :package on :hostname"
task :puppet, :hostname, :package do |t, args|
    package  = args[:package]  || "init"
    hostname = args[:hostname];

    if( Rake::Task["syntax"].execute() )
        puts "Applying puppet to #{username}@#{hostname} with package manifests/#{package}.pp"

        Rake::Task["rsync_puppet"].execute(args)

        commands = <<-BOOTSTRAP
            puppet apply --modulepath=/root/puppet/modules/ /root/puppet/manifests/#{package}.pp --verbose --summarize --debug
        BOOTSTRAP
        sh "ssh #{username}@#{hostname} '#{commands}'"

        Rake::Task["service_restart"].execute(args)
    end
end

desc "Deploy ~/websites/:website to #{username}@:hostname:/var/www/"
task :deploy, :hostname, :website do |t, args|
    hostname = args[:hostname] || ""
    website  = args[:website]  || args[:hostname]

    sh "rsync -rz --delete --exclude 'puppet' --exclude 'data' ~/websites/#{website}      #{username}@#{hostname}:/var/www/"
    sh "rsync -vrz ~/websites/#{website}/data #{username}@#{hostname}:/var/www/#{website}/"

    commands = <<-BOOTSTRAP
      cd /var/www/#{website};
      npm install;
      npm run production
    BOOTSTRAP
    sh "ssh #{username}@#{hostname} '#{commands}'"

    Rake::Task["service_restart"].execute(args)
end


task :service_restart, :hostname do |t, args|
  hostname = args[:hostname]

  commands = <<-BOOTSTRAP
    service supervisor restart
    service nginx restart
  BOOTSTRAP
  sh "ssh #{username}@#{hostname} '#{commands}'"
end

desc "rsync puppet to :hostname"
task :rsync_puppet, :hostname do |t, args|
  hostname = args[:hostname]

  sh "rsync -r --delete --exclude '.vagrant' ./ #{username}@#{hostname}:puppet"
end



desc "Check Puppet and package.json syntax before deploy"
task :syntax do
    sh 'find ./ -name "*.pp" | xargs puppet parser validate'
    sh 'find ./ -name "*.pp" -print -exec puppet-lint --no-names_containing_dash-check  --no-double_quoted_strings-check --no-arrow_alignment-check --no-80chars-check --no-documentation-check --no-variable_scope-check --no-2sp_soft_tabs-check {} \;'

    # npm install -g jsonlint
    sh 'find ../ -depth 2 -name package.json | xargs -t -L1 jsonlint -q'
end

desc "Check code has been fully pushed to github"
task :git_check do
  if File.directory?(File.dirname(__FILE__)+'/../.git')
    # Double check that everything is pushed to git before deployment
    sh "git push --dry-run"; puts;
    sh "git status";         puts;
  end
end
